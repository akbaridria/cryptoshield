/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  UpkeepIDConditional,
  UpkeepIDConditionalInterface,
} from "../../../contracts/chainlink/UpkeepIDConditional";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract LinkTokenInterface",
        name: "link",
        type: "address",
      },
      {
        internalType: "contract AutomationRegistrarInterface",
        name: "registrar",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "i_link",
    outputs: [
      {
        internalType: "contract LinkTokenInterface",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "i_registrar",
    outputs: [
      {
        internalType: "contract AutomationRegistrarInterface",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "listUpkeep",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "bytes",
            name: "encryptedEmail",
            type: "bytes",
          },
          {
            internalType: "address",
            name: "upkeepContract",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "gasLimit",
            type: "uint32",
          },
          {
            internalType: "address",
            name: "adminAddress",
            type: "address",
          },
          {
            internalType: "uint8",
            name: "triggerType",
            type: "uint8",
          },
          {
            internalType: "bytes",
            name: "checkData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "triggerConfig",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "offchainConfig",
            type: "bytes",
          },
          {
            internalType: "uint96",
            name: "amount",
            type: "uint96",
          },
        ],
        internalType: "struct Types.RegistrationParams",
        name: "params",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "registerAndPredictID",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c06040523480156200001157600080fd5b5060405162000f8f38038062000f8f83398181016040528101906200003791906200016a565b8173ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250508073ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff16815250505050620001b1565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000d982620000ac565b9050919050565b6000620000ed82620000cc565b9050919050565b620000ff81620000e0565b81146200010b57600080fd5b50565b6000815190506200011f81620000f4565b92915050565b60006200013282620000cc565b9050919050565b620001448162000125565b81146200015057600080fd5b50565b600081519050620001648162000139565b92915050565b60008060408385031215620001845762000183620000a7565b5b600062000194858286016200010e565b9250506020620001a78582860162000153565b9150509250929050565b60805160a051610da3620001ec6000396000818161010c0152818161016c01526101f601526000818161013001526103460152610da36000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806311fe02a714610051578063442b1278146100815780636c57f0491461009f5780637d253aff146100bb575b600080fd5b61006b60048036038101906100669190610410565b6100d9565b604051610078919061045f565b60405180910390f35b61008961010a565b60405161009691906104d9565b60405180910390f35b6100b960048036038101906100b49190610920565b61012e565b005b6100c3610344565b6040516100d0919061099d565b60405180910390f35b600060205281600052604060002081815481106100f557600080fd5b90600052602060002001600091509150505481565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663095ea7b37f00000000000000000000000000000000000000000000000000000000000000008461012001516040518363ffffffff1660e01b81526004016101ae9291906109f8565b6020604051808303816000875af11580156101cd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101f19190610a59565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16633f678e11846040518263ffffffff1660e01b815260040161024d9190610c8c565b6020604051808303816000875af115801561026c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102909190610cc3565b905060008114610304576000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081908060018154018082558091505060019003906000526020600020016000909190919091505561033f565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161033690610d4d565b60405180910390fd5b505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006103a78261037c565b9050919050565b6103b78161039c565b81146103c257600080fd5b50565b6000813590506103d4816103ae565b92915050565b6000819050919050565b6103ed816103da565b81146103f857600080fd5b50565b60008135905061040a816103e4565b92915050565b6000806040838503121561042757610426610372565b5b6000610435858286016103c5565b9250506020610446858286016103fb565b9150509250929050565b610459816103da565b82525050565b60006020820190506104746000830184610450565b92915050565b6000819050919050565b600061049f61049a6104958461037c565b61047a565b61037c565b9050919050565b60006104b182610484565b9050919050565b60006104c3826104a6565b9050919050565b6104d3816104b8565b82525050565b60006020820190506104ee60008301846104ca565b92915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610542826104f9565b810181811067ffffffffffffffff821117156105615761056061050a565b5b80604052505050565b6000610574610368565b90506105808282610539565b919050565b600080fd5b600080fd5b600080fd5b600067ffffffffffffffff8211156105af576105ae61050a565b5b6105b8826104f9565b9050602081019050919050565b82818337600083830152505050565b60006105e76105e284610594565b61056a565b9050828152602081018484840111156106035761060261058f565b5b61060e8482856105c5565b509392505050565b600082601f83011261062b5761062a61058a565b5b813561063b8482602086016105d4565b91505092915050565b600067ffffffffffffffff82111561065f5761065e61050a565b5b610668826104f9565b9050602081019050919050565b600061068861068384610644565b61056a565b9050828152602081018484840111156106a4576106a361058f565b5b6106af8482856105c5565b509392505050565b600082601f8301126106cc576106cb61058a565b5b81356106dc848260208601610675565b91505092915050565b600063ffffffff82169050919050565b6106fe816106e5565b811461070957600080fd5b50565b60008135905061071b816106f5565b92915050565b600060ff82169050919050565b61073781610721565b811461074257600080fd5b50565b6000813590506107548161072e565b92915050565b60006bffffffffffffffffffffffff82169050919050565b61077b8161075a565b811461078657600080fd5b50565b60008135905061079881610772565b92915050565b600061014082840312156107b5576107b46104f4565b5b6107c061014061056a565b9050600082013567ffffffffffffffff8111156107e0576107df610585565b5b6107ec84828501610616565b600083015250602082013567ffffffffffffffff8111156108105761080f610585565b5b61081c848285016106b7565b6020830152506040610830848285016103c5565b60408301525060606108448482850161070c565b6060830152506080610858848285016103c5565b60808301525060a061086c84828501610745565b60a08301525060c082013567ffffffffffffffff8111156108905761088f610585565b5b61089c848285016106b7565b60c08301525060e082013567ffffffffffffffff8111156108c0576108bf610585565b5b6108cc848285016106b7565b60e08301525061010082013567ffffffffffffffff8111156108f1576108f0610585565b5b6108fd848285016106b7565b6101008301525061012061091384828501610789565b6101208301525092915050565b6000806040838503121561093757610936610372565b5b600083013567ffffffffffffffff81111561095557610954610377565b5b6109618582860161079e565b9250506020610972858286016103c5565b9150509250929050565b6000610987826104a6565b9050919050565b6109978161097c565b82525050565b60006020820190506109b2600083018461098e565b92915050565b6109c18161039c565b82525050565b60006109e26109dd6109d88461075a565b61047a565b6103da565b9050919050565b6109f2816109c7565b82525050565b6000604082019050610a0d60008301856109b8565b610a1a60208301846109e9565b9392505050565b60008115159050919050565b610a3681610a21565b8114610a4157600080fd5b50565b600081519050610a5381610a2d565b92915050565b600060208284031215610a6f57610a6e610372565b5b6000610a7d84828501610a44565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610ac0578082015181840152602081019050610aa5565b60008484015250505050565b6000610ad782610a86565b610ae18185610a91565b9350610af1818560208601610aa2565b610afa816104f9565b840191505092915050565b600081519050919050565b600082825260208201905092915050565b6000610b2c82610b05565b610b368185610b10565b9350610b46818560208601610aa2565b610b4f816104f9565b840191505092915050565b610b638161039c565b82525050565b610b72816106e5565b82525050565b610b8181610721565b82525050565b610b908161075a565b82525050565b6000610140830160008301518482036000860152610bb48282610acc565b91505060208301518482036020860152610bce8282610b21565b9150506040830151610be36040860182610b5a565b506060830151610bf66060860182610b69565b506080830151610c096080860182610b5a565b5060a0830151610c1c60a0860182610b78565b5060c083015184820360c0860152610c348282610b21565b91505060e083015184820360e0860152610c4e8282610b21565b915050610100830151848203610100860152610c6a8282610b21565b915050610120830151610c81610120860182610b87565b508091505092915050565b60006020820190508181036000830152610ca68184610b96565b905092915050565b600081519050610cbd816103e4565b92915050565b600060208284031215610cd957610cd8610372565b5b6000610ce784828501610cae565b91505092915050565b600082825260208201905092915050565b7f6175746f2d617070726f76652064697361626c65640000000000000000000000600082015250565b6000610d37601583610cf0565b9150610d4282610d01565b602082019050919050565b60006020820190508181036000830152610d6681610d2a565b905091905056fea26469706673582212204b6a620f53a5f299fb476e1378c9bbf7c422924abd1c17a02f5cc0a15f51d12264736f6c63430008140033";

type UpkeepIDConditionalConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: UpkeepIDConditionalConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class UpkeepIDConditional__factory extends ContractFactory {
  constructor(...args: UpkeepIDConditionalConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    link: AddressLike,
    registrar: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(link, registrar, overrides || {});
  }
  override deploy(
    link: AddressLike,
    registrar: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(link, registrar, overrides || {}) as Promise<
      UpkeepIDConditional & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): UpkeepIDConditional__factory {
    return super.connect(runner) as UpkeepIDConditional__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UpkeepIDConditionalInterface {
    return new Interface(_abi) as UpkeepIDConditionalInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): UpkeepIDConditional {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as UpkeepIDConditional;
  }
}
