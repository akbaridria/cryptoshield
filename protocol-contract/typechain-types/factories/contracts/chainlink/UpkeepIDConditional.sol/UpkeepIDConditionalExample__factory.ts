/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  UpkeepIDConditionalExample,
  UpkeepIDConditionalExampleInterface,
} from "../../../../contracts/chainlink/UpkeepIDConditional.sol/UpkeepIDConditionalExample";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract LinkTokenInterface",
        name: "link",
        type: "address",
      },
      {
        internalType: "contract AutomationRegistrarInterface",
        name: "registrar",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "i_link",
    outputs: [
      {
        internalType: "contract LinkTokenInterface",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "i_registrar",
    outputs: [
      {
        internalType: "contract AutomationRegistrarInterface",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "bytes",
            name: "encryptedEmail",
            type: "bytes",
          },
          {
            internalType: "address",
            name: "upkeepContract",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "gasLimit",
            type: "uint32",
          },
          {
            internalType: "address",
            name: "adminAddress",
            type: "address",
          },
          {
            internalType: "uint8",
            name: "triggerType",
            type: "uint8",
          },
          {
            internalType: "bytes",
            name: "checkData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "triggerConfig",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "offchainConfig",
            type: "bytes",
          },
          {
            internalType: "uint96",
            name: "amount",
            type: "uint96",
          },
        ],
        internalType: "struct RegistrationParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "registerAndPredictID",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c06040523480156200001157600080fd5b5060405162000e2338038062000e2383398181016040528101906200003791906200016a565b8173ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250508073ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff16815250505050620001b1565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000d982620000ac565b9050919050565b6000620000ed82620000cc565b9050919050565b620000ff81620000e0565b81146200010b57600080fd5b50565b6000815190506200011f81620000f4565b92915050565b60006200013282620000cc565b9050919050565b620001448162000125565b81146200015057600080fd5b50565b600081519050620001648162000139565b92915050565b60008060408385031215620001845762000183620000a7565b5b600062000194858286016200010e565b9250506020620001a78582860162000153565b9150509250929050565b60805160a051610c3a620001e96000396000818160a00152818161012401526101ae01526000818160c4015260e80152610c3a6000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063442b1278146100465780637d253aff14610064578063acad9b4c14610082575b600080fd5b61004e61009e565b60405161005b9190610310565b60405180910390f35b61006c6100c2565b604051610079919061034c565b60405180910390f35b61009c600480360381019061009791906107e5565b6100e6565b005b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663095ea7b37f00000000000000000000000000000000000000000000000000000000000000008361012001516040518363ffffffff1660e01b8152600401610166929190610878565b6020604051808303816000875af1158015610185573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101a991906108d9565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16633f678e11836040518263ffffffff1660e01b81526004016102059190610b0c565b6020604051808303816000875af1158015610224573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102489190610b5a565b90506000810361028d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161028490610be4565b60405180910390fd5b5050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006102d66102d16102cc84610291565b6102b1565b610291565b9050919050565b60006102e8826102bb565b9050919050565b60006102fa826102dd565b9050919050565b61030a816102ef565b82525050565b60006020820190506103256000830184610301565b92915050565b6000610336826102dd565b9050919050565b6103468161032b565b82525050565b6000602082019050610361600083018461033d565b92915050565b6000604051905090565b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6103c982610380565b810181811067ffffffffffffffff821117156103e8576103e7610391565b5b80604052505050565b60006103fb610367565b905061040782826103c0565b919050565b600080fd5b600080fd5b600080fd5b600067ffffffffffffffff82111561043657610435610391565b5b61043f82610380565b9050602081019050919050565b82818337600083830152505050565b600061046e6104698461041b565b6103f1565b90508281526020810184848401111561048a57610489610416565b5b61049584828561044c565b509392505050565b600082601f8301126104b2576104b1610411565b5b81356104c284826020860161045b565b91505092915050565b600067ffffffffffffffff8211156104e6576104e5610391565b5b6104ef82610380565b9050602081019050919050565b600061050f61050a846104cb565b6103f1565b90508281526020810184848401111561052b5761052a610416565b5b61053684828561044c565b509392505050565b600082601f83011261055357610552610411565b5b81356105638482602086016104fc565b91505092915050565b600061057782610291565b9050919050565b6105878161056c565b811461059257600080fd5b50565b6000813590506105a48161057e565b92915050565b600063ffffffff82169050919050565b6105c3816105aa565b81146105ce57600080fd5b50565b6000813590506105e0816105ba565b92915050565b600060ff82169050919050565b6105fc816105e6565b811461060757600080fd5b50565b600081359050610619816105f3565b92915050565b60006bffffffffffffffffffffffff82169050919050565b6106408161061f565b811461064b57600080fd5b50565b60008135905061065d81610637565b92915050565b6000610140828403121561067a5761067961037b565b5b6106856101406103f1565b9050600082013567ffffffffffffffff8111156106a5576106a461040c565b5b6106b18482850161049d565b600083015250602082013567ffffffffffffffff8111156106d5576106d461040c565b5b6106e18482850161053e565b60208301525060406106f584828501610595565b6040830152506060610709848285016105d1565b606083015250608061071d84828501610595565b60808301525060a06107318482850161060a565b60a08301525060c082013567ffffffffffffffff8111156107555761075461040c565b5b6107618482850161053e565b60c08301525060e082013567ffffffffffffffff8111156107855761078461040c565b5b6107918482850161053e565b60e08301525061010082013567ffffffffffffffff8111156107b6576107b561040c565b5b6107c28482850161053e565b610100830152506101206107d88482850161064e565b6101208301525092915050565b6000602082840312156107fb576107fa610371565b5b600082013567ffffffffffffffff81111561081957610818610376565b5b61082584828501610663565b91505092915050565b6108378161056c565b82525050565b6000819050919050565b600061086261085d6108588461061f565b6102b1565b61083d565b9050919050565b61087281610847565b82525050565b600060408201905061088d600083018561082e565b61089a6020830184610869565b9392505050565b60008115159050919050565b6108b6816108a1565b81146108c157600080fd5b50565b6000815190506108d3816108ad565b92915050565b6000602082840312156108ef576108ee610371565b5b60006108fd848285016108c4565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610940578082015181840152602081019050610925565b60008484015250505050565b600061095782610906565b6109618185610911565b9350610971818560208601610922565b61097a81610380565b840191505092915050565b600081519050919050565b600082825260208201905092915050565b60006109ac82610985565b6109b68185610990565b93506109c6818560208601610922565b6109cf81610380565b840191505092915050565b6109e38161056c565b82525050565b6109f2816105aa565b82525050565b610a01816105e6565b82525050565b610a108161061f565b82525050565b6000610140830160008301518482036000860152610a34828261094c565b91505060208301518482036020860152610a4e82826109a1565b9150506040830151610a6360408601826109da565b506060830151610a7660608601826109e9565b506080830151610a8960808601826109da565b5060a0830151610a9c60a08601826109f8565b5060c083015184820360c0860152610ab482826109a1565b91505060e083015184820360e0860152610ace82826109a1565b915050610100830151848203610100860152610aea82826109a1565b915050610120830151610b01610120860182610a07565b508091505092915050565b60006020820190508181036000830152610b268184610a16565b905092915050565b610b378161083d565b8114610b4257600080fd5b50565b600081519050610b5481610b2e565b92915050565b600060208284031215610b7057610b6f610371565b5b6000610b7e84828501610b45565b91505092915050565b600082825260208201905092915050565b7f6175746f2d617070726f76652064697361626c65640000000000000000000000600082015250565b6000610bce601583610b87565b9150610bd982610b98565b602082019050919050565b60006020820190508181036000830152610bfd81610bc1565b905091905056fea2646970667358221220b3c5cdd8e9a0c55b90bf7c55b9cb7fc046941f686cfc83e51cd52c2fe64326a864736f6c63430008140033";

type UpkeepIDConditionalExampleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: UpkeepIDConditionalExampleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class UpkeepIDConditionalExample__factory extends ContractFactory {
  constructor(...args: UpkeepIDConditionalExampleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    link: AddressLike,
    registrar: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(link, registrar, overrides || {});
  }
  override deploy(
    link: AddressLike,
    registrar: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(link, registrar, overrides || {}) as Promise<
      UpkeepIDConditionalExample & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): UpkeepIDConditionalExample__factory {
    return super.connect(runner) as UpkeepIDConditionalExample__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UpkeepIDConditionalExampleInterface {
    return new Interface(_abi) as UpkeepIDConditionalExampleInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): UpkeepIDConditionalExample {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as UpkeepIDConditionalExample;
  }
}
