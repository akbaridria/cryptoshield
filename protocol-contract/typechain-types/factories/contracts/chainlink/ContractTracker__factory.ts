/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  ContractTracker,
  ContractTrackerInterface,
} from "../../../contracts/chainlink/ContractTracker";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_orderNumber",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_feedConsumer",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "checkUpkeep",
    outputs: [
      {
        internalType: "bool",
        name: "upkeepNeeded",
        type: "bool",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "performUpkeep",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610afc380380610afc8339818101604052810190610032919061015a565b81600281905550806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555033600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505061019a565b600080fd5b6000819050919050565b6100d9816100c6565b81146100e457600080fd5b50565b6000815190506100f6816100d0565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610127826100fc565b9050919050565b6101378161011c565b811461014257600080fd5b50565b6000815190506101548161012e565b92915050565b60008060408385031215610171576101706100c1565b5b600061017f858286016100e7565b925050602061019085828601610145565b9150509250929050565b610953806101a96000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80634585e33b1461003b5780636e04ff0d14610057575b600080fd5b6100556004803603810190610050919061032b565b610088565b005b610071600480360381019061006c919061032b565b61011b565b60405161007f929190610423565b60405180910390f35b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16633afe208b6002546040518263ffffffff1660e01b81526004016100e5919061046c565b600060405180830381600087803b1580156100ff57600080fd5b505af1158015610113573d6000803e3d6000fd5b505050505050565b6000606060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632daae2f36040518163ffffffff1660e01b8152600401606060405180830381865afa15801561018d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101b1919061052b565b509150506000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635005cbe36002546040518263ffffffff1660e01b8152600401610214919061046c565b600060405180830381865afa158015610231573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061025a91906108a5565b9050428160e00151108061027257508060c001518213155b80156102a757506000600281111561028d5761028c6108ee565b5b81610120015160028111156102a5576102a46108ee565b5b145b935050509250929050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b60008083601f8401126102eb576102ea6102c6565b5b8235905067ffffffffffffffff811115610308576103076102cb565b5b602083019150836001820283011115610324576103236102d0565b5b9250929050565b60008060208385031215610342576103416102bc565b5b600083013567ffffffffffffffff8111156103605761035f6102c1565b5b61036c858286016102d5565b92509250509250929050565b60008115159050919050565b61038d81610378565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b838110156103cd5780820151818401526020810190506103b2565b60008484015250505050565b6000601f19601f8301169050919050565b60006103f582610393565b6103ff818561039e565b935061040f8185602086016103af565b610418816103d9565b840191505092915050565b60006040820190506104386000830185610384565b818103602083015261044a81846103ea565b90509392505050565b6000819050919050565b61046681610453565b82525050565b6000602082019050610481600083018461045d565b92915050565b600069ffffffffffffffffffff82169050919050565b6104a681610487565b81146104b157600080fd5b50565b6000815190506104c38161049d565b92915050565b6000819050919050565b6104dc816104c9565b81146104e757600080fd5b50565b6000815190506104f9816104d3565b92915050565b61050881610453565b811461051357600080fd5b50565b600081519050610525816104ff565b92915050565b600080600060608486031215610544576105436102bc565b5b6000610552868287016104b4565b9350506020610563868287016104ea565b925050604061057486828701610516565b9150509250925092565b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6105bb826103d9565b810181811067ffffffffffffffff821117156105da576105d9610583565b5b80604052505050565b60006105ed6102b2565b90506105f982826105b2565b919050565b600080fd5b61060c81610378565b811461061757600080fd5b50565b60008151905061062981610603565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061065a8261062f565b9050919050565b61066a8161064f565b811461067557600080fd5b50565b60008151905061068781610661565b92915050565b6002811061069a57600080fd5b50565b6000815190506106ac8161068d565b92915050565b600080fd5b600067ffffffffffffffff8211156106d2576106d1610583565b5b6106db826103d9565b9050602081019050919050565b60006106fb6106f6846106b7565b6105e3565b905082815260208101848484011115610717576107166106b2565b5b6107228482856103af565b509392505050565b600082601f83011261073f5761073e6102c6565b5b815161074f8482602086016106e8565b91505092915050565b6003811061076557600080fd5b50565b60008151905061077781610758565b92915050565b600061016082840312156107945761079361057e565b5b61079f6101606105e3565b905060006107af8482850161061a565b60008301525060206107c384828501610678565b60208301525060406107d784828501610516565b60408301525060606107eb8482850161069d565b606083015250608082015167ffffffffffffffff81111561080f5761080e6105fe565b5b61081b8482850161072a565b60808301525060a061082f848285016104ea565b60a08301525060c0610843848285016104ea565b60c08301525060e061085784828501610516565b60e08301525061010061086c84828501610516565b6101008301525061012061088284828501610768565b6101208301525061014061089884828501610516565b6101408301525092915050565b6000602082840312156108bb576108ba6102bc565b5b600082015167ffffffffffffffff8111156108d9576108d86102c1565b5b6108e58482850161077d565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fdfea2646970667358221220522193be6aa6a36fb9d01a674632a6814012faef8fb6afe914dc10f0dff2371364736f6c63430008140033";

type ContractTrackerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ContractTrackerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ContractTracker__factory extends ContractFactory {
  constructor(...args: ContractTrackerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _orderNumber: BigNumberish,
    _feedConsumer: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _orderNumber,
      _feedConsumer,
      overrides || {}
    );
  }
  override deploy(
    _orderNumber: BigNumberish,
    _feedConsumer: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _orderNumber,
      _feedConsumer,
      overrides || {}
    ) as Promise<
      ContractTracker & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ContractTracker__factory {
    return super.connect(runner) as ContractTracker__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ContractTrackerInterface {
    return new Interface(_abi) as ContractTrackerInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ContractTracker {
    return new Contract(address, _abi, runner) as unknown as ContractTracker;
  }
}
